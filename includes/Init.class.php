<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

//include 'Curl.php';
class  Init
{

    private $dealbao_options;

    public function __construct()
    {
        set_time_limit(0);
        add_action('admin_menu', array($this, 'dealbao_add_plugin_page'));
        add_action('admin_init', array($this, 'dealbao_page_init'));

        add_action( 'wp_ajax_dealbao_get_goods_category' ,   array($this, 'dealbao_get_goods_category')) ;//获取woo产品分类
        add_action( 'wp_ajax_dealbao_add_goods' , array($this, 'dealbao_add_goods') ) ;//上传产品到woo
    }


    //钩子绑定到具体行为上
    public function dealbao_add_plugin_page()
    {
        add_menu_page(
            __('Basic supply chain setup','dealbao'), // page_title
            __('Supply Chain','dealbao'), // menu_title
            'manage_options', // capability
            'dealbao', // menu_slug
            array($this, 'dealbao_create_admin_page'), // function
            'dashicons-admin-settings', // icon_url
            56.69 // position
        );
        add_submenu_page(
            'dealbao',
            __('Order List','dealbao'),//订单列表
            __('Order List','dealbao'),//订单列表
            'manage_options',
            'dealbao_order',
            array($this, 'dealbao_create_order_menu')
        );
        add_submenu_page(
            'dealbao',
            __('Product List','dealbao'),//商品列表
            __('Product List','dealbao'),//商品列表
            'manage_options',
            'dealbao_goods',
            array($this, 'dealbao_create_goods_menu')
        );
        add_submenu_page(
            'dealbao',
            __('Collect List','dealbao'),//收藏列表
            __('Collect List','dealbao'),//收藏列表
            'manage_options',
            'dealbao_collect',
            array($this, 'dealbao_create_collect_menu')
        );
        add_submenu_page(
            'dealbao',
            __('Binding Category','dealbao'),//分类绑定
            __('Binding Category','dealbao'),//分类绑定
            'manage_options',
            'dealbao_category',
            array($this, 'dealbao_create_category')
        );

    }

    public function dealbao_create_order_menu()
    {

        $this->isWoocommer();

        include_once(dirname(__FILE__) . '\dealbaoOrder\dealbaoOrder.class.php');
    }

    public function dealbao_create_goods_menu()
    {

        $this->isWoocommer();

        include_once(dirname(__FILE__) . '\dealbaoGoods\dealbaoGoods.class.php');
//        include_once(dirname(__FILE__) . '\dealbaoGoods\dealbaoAddGoods.class.php');
    }

    public function dealbao_create_collect_menu()
    {

        $this->isWoocommer();

        include_once(dirname(__FILE__) . '\dealbaoCollect\dealbaoCollect.class.php');
//        include_once(dirname(__FILE__) . '\dealbaoGoods\dealbaoAddGoods.class.php');
    }
    public function dealbao_create_category()
    {

        $this->isWoocommer();

        include_once(dirname(__FILE__) . '\dealbaoCategory\dealbaoCategory.class.php');

    }

    //钩子的回调函数
    public function dealbao_create_admin_page()
    {

        $this->isWoocommer();
        if( !empty( $_POST ) && check_admin_referer( 'dealbao_option_setting' ) ) {

            require_once(DEALBAO_PLUGIN_DIR.'/includes/dealbaoSetting/setConfig.class.php');
        }
        if (!current_user_can('manage_options'))
            wp_die(__('You do not have the sufficient permissions to access this page.'));
        $this->dealbao_options = get_option('dealbao_option_name');

        include_once(dirname(__FILE__) . '\dealbaoSetting\appSetting.php');


    }

    //初始化页面
    public function dealbao_page_init()
    {
        register_setting(
            'dealbao_option_group', // option_group
            'dealbao_option_name', // option_name
            array($this, 'dealbao_sanitize') // sanitize_callback
        );

        add_settings_section(
            'dealbao_setting_section', // id
            '', // title
            array($this, 'dealbao_section_info'), // callback
            'dealbao-admin' // page
        );

        add_settings_field(
            'appid', // id
            'appid', // title
            array($this, 'appid_callback'), // callback
            'dealbao-admin', // page
            'dealbao_setting_section' // section
        );

        add_settings_field(
            'appkey', // id
            'appkey', // title
            array($this, 'appkey_callback'), // callback
            'dealbao-admin', // page
            'dealbao_setting_section' // section
        );

        add_settings_field(
            'secret', // id
            'secret', // title
            array($this, 'secret_callback'), // callback
            'dealbao-admin', // page
            'dealbao_setting_section' // section
        );


    }

    //获取到具体的值
    public function dealbao_sanitize($input)
    {

        $sanitary_values = array();
        if (isset($input['appid'])) {
            $sanitary_values['appid'] = sanitize_text_field($input['appid']);
        }

        if (isset($input['appkey'])) {
            $sanitary_values['appkey'] = sanitize_text_field($input['appkey']);
        }

        if (isset($input['secret'])) {
            $sanitary_values['secret'] = sanitize_text_field($input['secret']);
        }


        return $sanitary_values;
    }

    //页面渲染回调函数
    public function dealbao_section_info()
    {

    }

    //页面渲染回调函数
    public function appid_callback()
    {

        printf(
            '<input class="regular-text" type="text" name="dealbao_option_name[appid]" id="appid" value="%s">',
            isset($this->dealbao_options['appid']) ? esc_attr($this->dealbao_options['appid']) : ''
        );
    }

    //页面渲染回调函数
    public function appkey_callback()
    {
        printf(
            '<input class="regular-text" type="text" name="dealbao_option_name[appkey]" id="appkey" value="%s">',
            isset($this->dealbao_options['appkey']) ? esc_attr($this->dealbao_options['appkey']) : ''
        );
    }

    //页面渲染回调函数
    public function secret_callback()
    {
        printf(
            '<input class="regular-text" type="text" name="dealbao_option_name[secret]" id="secret" value="%s">',
            isset($this->dealbao_options['secret']) ? esc_attr($this->dealbao_options['secret']) : ''
        );
    }



    /*********************************************获取woo产品分类*****************************************************/
    //获取分类产品
    public function dealbao_get_goods_category(){
        $taxonomy = 'product_cat';
        $args = array('hide_empty'=> 0);
        $terms =  json_encode(get_terms(
            'product_cat',$args
        ));
        $terms =   $this->getNoneKeyCategoryList(json_decode($terms,true),0, 'parent', 'term_id');

        $this->treeHtml($terms,$taxonomy);

        wp_die();


    }
    //获取分类树
    public function getNoneKeyCategoryList(&$data, $pid, $key, $id_key)
    {
        $arr = [];
        foreach ($data as $list_key => $value) {
            if ($value[$key] == $pid) {
                unset($data[$list_key]);
                $res = $this->getNoneKeyCategoryList($data, $value[$id_key], $key, $id_key);
                !empty($res) && $value['children'] = $res;
                $arr[] = $value;
            }
        }
        return $arr;
    }

    public function treeHtml($terms,$taxonomy = 'product_cat'){
        $tax = get_taxonomy( $taxonomy );
        $checked_terms = array();
        $popular_ids = array();
        foreach ( $terms as $term ) {
            $popular_ids[] = $term['term_id'];

            $id      = "popular-$taxonomy-".$term['term_id'];
            $checked = in_array( $term['term_id'], $checked_terms ) ? 'checked="checked"' : '';
            ?>

            <li id="<?php echo $id; ?>" class="popular-category">
                <label class="selectit">
                    <input id="in-<?php echo $id; ?>" class="dealbao_category_list" type="checkbox" <?php echo $checked; ?> value="<?php echo (int) $term['term_id']; ?>" <?php disabled( ! current_user_can( $tax->cap->assign_terms ) ); ?> />
                    <?php
                    /** This filter is documented in wp-includes/category-template.php */
                    echo esc_html( apply_filters( 'the_category', $term['name'], '', '' ) );
                    ?>
                </label>
                <?php
                if (!empty($term['children'])) {
                    ?>
                    <ul class="children">
                        <?php
                        $this->treeHtml($term['children']);
                        ?>

                    </ul>
                    <?php
                }
                ?>

            </li>

            <?php
        }
    }


    /*********************************************上传产品到woo插件*****************************************************/

    public function dealbao_add_goods(){
        include_once(dirname(__FILE__) . '\dealbaoGoods\dealbaoAddGoods.class.php');
    }


    //判断woocommerce插件是否启用
    public function isWoocommer(){
        if (!class_exists('Woocommerce')) {
            wp_die( __('Woocommerce is not enabled','dealbao'));
        }
    }



}


